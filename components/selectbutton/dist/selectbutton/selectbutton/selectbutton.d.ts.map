{"version":3,"file":"selectbutton.d.ts","sources":["selectbutton.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport { SelectItem } from '../common/selectitem';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare const SELECTBUTTON_VALUE_ACCESSOR: any;\r\nexport declare class SelectButton implements ControlValueAccessor {\r\n    private cd;\r\n    tabindex: number;\r\n    multiple: boolean;\r\n    style: any;\r\n    styleClass: string;\r\n    disabled: boolean;\r\n    dataKey: string;\r\n    optionLabel: string;\r\n    onOptionClick: EventEmitter<any>;\r\n    onChange: EventEmitter<any>;\r\n    itemTemplate: any;\r\n    value: any;\r\n    focusedItem: HTMLDivElement;\r\n    _options: any[];\r\n    onModelChange: Function;\r\n    onModelTouched: Function;\r\n    constructor(cd: ChangeDetectorRef);\r\n    options: any[];\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: Function): void;\r\n    registerOnTouched(fn: Function): void;\r\n    setDisabledState(val: boolean): void;\r\n    onItemClick(event: any, option: SelectItem, index: number): void;\r\n    onFocus(event: Event): void;\r\n    onBlur(event: any): void;\r\n    isSelected(option: SelectItem): boolean;\r\n    findItemIndex(option: SelectItem): number;\r\n}\r\nexport declare class SelectButtonModule {\r\n}\r\n"]}