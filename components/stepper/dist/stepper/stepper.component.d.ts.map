{"version":3,"file":"stepper.component.d.ts","sources":["stepper.component.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter } from '@angular/core';\r\nexport declare class StepperComponent implements OnInit {\r\n    maxValue: any;\r\n    minValue: any;\r\n    value: any;\r\n    isLoading: boolean;\r\n    hideInput: boolean;\r\n    stepperId: string;\r\n    changeValue: EventEmitter<any>;\r\n    constructor();\r\n    ngOnInit(): void;\r\n    /**\r\n     * Handle the input change: convert the value to number and call checkAndEmitValue\r\n     * @param event any - the input change event\r\n     * @return void\r\n     */\r\n    inputChange(event: any): void;\r\n    /**\r\n     * Call checkAndEmitValue with the current value increased by one\r\n     * @return void\r\n     */\r\n    increaseValue(): void;\r\n    /**\r\n     * Call checkAndEmitValue with the current value decreased by one\r\n     * @return void\r\n     */\r\n    decreaseValue(): void;\r\n    /**\r\n     * Check if the value parameter is allowed to be set as the new value\r\n     * - If allowed to be set: change the value and emit the change\r\n     * - If not allowed to be set: change the value to the nearest safeguard and emit the change\r\n     * @param any value - the numeric value to be set as the new value\r\n     * @return void\r\n     */\r\n    private checkAndEmitValue;\r\n}\r\n"]}