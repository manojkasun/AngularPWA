{"version":3,"file":"bit-cas-aanzee.pairprogramming.stepper.js","sources":["@bit/cas-aanzee.pairprogramming.stepper/stepper.component.ts","@bit/cas-aanzee.pairprogramming.stepper/stepper.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n\tselector: 'valk-stepper',\n\ttemplateUrl: './stepper.component.html',\n\tstyleUrls: ['./stepper.component.scss'],\n})\nexport class StepperComponent implements OnInit {\n\t@Input() maxValue: any;\n\t@Input() minValue: any = 1;\n\t@Input() value: any;\n\t@Input() isLoading: boolean = false;\n\t@Input() hideInput: boolean = false;\n\t@Input() stepperId: string;\n\t@Output() changeValue: EventEmitter<any> = new EventEmitter();\n\n\tconstructor() {}\n\n\tngOnInit(): void {\n\t\tthis.maxValue = Number.parseInt(this.maxValue);\n\t\tthis.minValue = Number.parseInt(this.minValue);\n\t\tthis.value = Number.parseInt(this.value);\n\t}\n\n\t/**\n\t * Handle the input change: convert the value to number and call checkAndEmitValue\n\t * @param event any - the input change event\n\t * @return void\n\t */\n\tinputChange(event: any): void {\n\t\tlet value = Number.parseInt(event.target.value);\n\t\tthis.checkAndEmitValue(value);\n\t}\n\n\t/**\n\t * Call checkAndEmitValue with the current value increased by one\n\t * @return void\n\t */\n\tincreaseValue(): void {\n\t\tthis.checkAndEmitValue(this.value + 1);\n\t}\n\n\t/**\n\t * Call checkAndEmitValue with the current value decreased by one\n\t * @return void\n\t */\n\tdecreaseValue(): void {\n\t\tthis.checkAndEmitValue(this.value - 1);\n\t}\n\n\t/**\n\t * Check if the value parameter is allowed to be set as the new value\n\t * - If allowed to be set: change the value and emit the change\n\t * - If not allowed to be set: change the value to the nearest safeguard and emit the change\n\t * @param any value - the numeric value to be set as the new value\n\t * @return void\n\t */\n\tprivate checkAndEmitValue(value: any): void {\n\t\tif (value !== value || value === undefined || value === null) {\n\t\t\t// NOTE: Check value against itself to check if its NaN, since NaN is the only JS value unequal to itself.\n\t\t\tvalue = this.minValue;\n\t\t}\n\t\tif (value > this.maxValue) {\n\t\t\tvalue = this.maxValue;\n\t\t}\n\t\tif (value < this.minValue) {\n\t\t\tvalue = this.minValue;\n\t\t}\n\t\tthis.value = Number(value);\n\t\tthis.changeValue.emit(this.value);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StepperComponent } from './stepper.component';\n\n@NgModule({\n\tdeclarations: [StepperComponent],\n\timports: [CommonModule],\n\texports: [StepperComponent],\n})\nexport class StepperModule {}\n"]}