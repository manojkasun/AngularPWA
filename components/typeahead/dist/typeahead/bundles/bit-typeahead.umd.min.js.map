{"version":3,"sources":["ng://@bit/valor-software.ngx-bootstrap.typeahead/typeahead/latin-map.ts","ng://@bit/valor-software.ngx-bootstrap.typeahead/typeahead/typeahead-options.class.ts","ng://@bit/valor-software.ngx-bootstrap.typeahead/typeahead/typeahead-match.class.ts","ng://@bit/valor-software.ngx-bootstrap.typeahead/typeahead/typeahead-utils.ts","ng://@bit/valor-software.ngx-bootstrap.typeahead/typeahead/typeahead-animations.ts","ng://@bit/valor-software.ngx-bootstrap.typeahead/typeahead/typeahead-container.component.ts","ng://@bit/valor-software.ngx-bootstrap.typeahead/typeahead/typeahead.config.ts","ng://@bit/valor-software.ngx-bootstrap.typeahead/typeahead/typeahead.directive.ts","ng://@bit/valor-software.ngx-bootstrap.typeahead/typeahead/typeahead.module.ts"],"names":["latinMap","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Ö","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","TypeaheadOptions","options","Object","assign","this","TypeaheadMatch","item","value","header","prototype","isHeader","toString","latinize","str","replace","a","tokenize","wordRegexDelimiters","phraseRegexDelimiters","token","regexStr","preTokenized","split","RegExp","result","preTokenizedLength","length","replacePhraseDelimiters","i","push","getValueFromObject","object","option","endsWith","slice","propertiesArray","propertiesArray_1","__values","propertiesArray_1_1","next","done","property","typeaheadAnimation","trigger","state","style","height","overflow","transition","animate","TypeaheadContainerComponent","positionService","renderer","element","isFocused","visibility","_matches","isScrolledIntoView","elem","containerViewTop","ulElement","nativeElement","scrollTop","containerViewBottom","Number","offsetHeight","elemTop","offsetTop","defineProperty","isBs3","_active","_this","setOptions","modifiers","flip","enabled","adaptivePosition","allowedPositions","event$","pipe","take","subscribe","disable","typeaheadScrollable","isAnimated","animationState","isTopPosition","needScrollbar","typeaheadOptionsInScrollableView","matches","setTimeout","setScrollableMode","typeaheadIsFirstItemActive","nextActiveMatch","concurrency","find","match","selectActive","classList","contains","parent","optionsListTemplate","undefined","typeaheadItemTemplate","selectActiveMatch","isActiveItemChanged","typeaheadSelectFirstItem","selectMatch","positionServiceEnable","enable","prevActiveMatch","index","indexOf","scrollPrevious","scrollNext","highlight","query","startIdx","tokenLen","itemStr","itemStrHelper","typeaheadLatinize","toLowerCase","queryLen","substring","repeat","focusLost","isActive","e","stopPropagation","preventDefault","changeModel","typeaheadOnSelect","emit","liElements","first","ulStyles","Utils","getStyles","liStyles","ulPaddingBottom","parseFloat","ulPaddingTop","optionHeight","guiHeight","setStyle","liElement","toArray","scrollToBottom","scrollToTop","scrollHeight","Component","args","selector","template","host","class","[class.dropdown-menu]","[style.overflow-y]","[style.height]","[style.visibility]","[class.dropup]","animations","PositioningService","Renderer2","ElementRef","ViewChild","static","ViewChildren","HostListener","type","TypeaheadConfig","hideResultsOnBlur","selectFirstItem","isFirstItemActive","minLength","Injectable","TypeaheadDirective","cis","config","changeDetection","ngControl","viewContainerRef","typeaheadMinLength","typeaheadAsync","typeaheadSingleWords","typeaheadWordDelimiters","typeaheadPhraseDelimiters","typeaheadLoading","EventEmitter","typeaheadNoResults","typeaheadOnBlur","dropup","isTypeaheadOptionsListActive","keyUpEventEmitter","placement","_subscriptions","_typeahead","createLoader","provide","useValue","typeaheadHideResultsOnBlur","ngOnInit","typeaheadOptionsLimit","typeaheadWaitMs","isObservable","typeahead","asyncActions","syncActions","onInput","target","textContent","innerText","trim","hide","onChange","event","_container","keyCode","key","onFocus","onBlur","active","onKeydown","valueStr","viewToModelUpdate","setValue","markForCheck","show","attach","to","container","position","attachment","typeaheadRef","animation","_outsideClickListener","listen","onOutsideClick","instance","normalizedQuery","control","focus","isShown","ngOnDestroy","_b","_c","unsubscribe","dispose","debounceTime","switchMap","finalizeAsyncCall","mergeMap","normalizeQuery","from","filter","testMatch","normalizeOption","optionValue","typeaheadOptionField","test","spaceLength","prepareMatches","hasMatches","limited","typeaheadGroupField","matches_1","map","v","forEach","group","concat","Directive","exportAs","ComponentLoaderFactory","ChangeDetectorRef","NgControl","ViewContainerRef","Input","Output","TypeaheadModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","declarations","exports","entryComponents","queryToEscape"],"mappings":"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","sourcesContent":["/* tslint:disable */\nexport const latinMap: { [key: string]: string } = {\n    'Ã': 'A',\n    'Ä': 'A',\n    'áº®': 'A',\n    'áº¶': 'A',\n    'áº°': 'A',\n    'áº²': 'A',\n    'áº´': 'A',\n    'Ç': 'A',\n    'Ã': 'A',\n    'áº¤': 'A',\n    'áº¬': 'A',\n    'áº¦': 'A',\n    'áº¨': 'A',\n    'áºª': 'A',\n    'Ã': 'A',\n    'Ç': 'A',\n    'È¦': 'A',\n    'Ç ': 'A',\n    'áº ': 'A',\n    'È': 'A',\n    'Ã': 'A',\n    'áº¢': 'A',\n    'È': 'A',\n    'Ä': 'A',\n    'Ä': 'A',\n    'Ã': 'A',\n    'Çº': 'A',\n    'á¸': 'A',\n    'Èº': 'A',\n    'Ã': 'A',\n    'ê²': 'AA',\n    'Ã': 'AE',\n    'Ç¼': 'AE',\n    'Ç¢': 'AE',\n    'ê´': 'AO',\n    'ê¶': 'AU',\n    'ê¸': 'AV',\n    'êº': 'AV',\n    'ê¼': 'AY',\n    'á¸': 'B',\n    'á¸': 'B',\n    'Æ': 'B',\n    'á¸': 'B',\n    'É': 'B',\n    'Æ': 'B',\n    'Ä': 'C',\n    'Ä': 'C',\n    'Ã': 'C',\n    'á¸': 'C',\n    'Ä': 'C',\n    'Ä': 'C',\n    'Æ': 'C',\n    'È»': 'C',\n    'Ä': 'D',\n    'á¸': 'D',\n    'á¸': 'D',\n    'á¸': 'D',\n    'á¸': 'D',\n    'Æ': 'D',\n    'á¸': 'D',\n    'Ç²': 'D',\n    'Ç': 'D',\n    'Ä': 'D',\n    'Æ': 'D',\n    'Ç±': 'DZ',\n    'Ç': 'DZ',\n    'Ã': 'E',\n    'Ä': 'E',\n    'Ä': 'E',\n    'È¨': 'E',\n    'á¸': 'E',\n    'Ã': 'E',\n    'áº¾': 'E',\n    'á»': 'E',\n    'á»': 'E',\n    'á»': 'E',\n    'á»': 'E',\n    'á¸': 'E',\n    'Ã': 'E',\n    'Ä': 'E',\n    'áº¸': 'E',\n    'È': 'E',\n    'Ã': 'E',\n    'áºº': 'E',\n    'È': 'E',\n    'Ä': 'E',\n    'á¸': 'E',\n    'á¸': 'E',\n    'Ä': 'E',\n    'É': 'E',\n    'áº¼': 'E',\n    'á¸': 'E',\n    'êª': 'ET',\n    'á¸': 'F',\n    'Æ': 'F',\n    'Ç´': 'G',\n    'Ä': 'G',\n    'Ç¦': 'G',\n    'Ä¢': 'G',\n    'Ä': 'G',\n    'Ä ': 'G',\n    'Æ': 'G',\n    'á¸ ': 'G',\n    'Ç¤': 'G',\n    'á¸ª': 'H',\n    'È': 'H',\n    'á¸¨': 'H',\n    'Ä¤': 'H',\n    'â±§': 'H',\n    'á¸¦': 'H',\n    'á¸¢': 'H',\n    'á¸¤': 'H',\n    'Ä¦': 'H',\n    'Ã': 'I',\n    'Ä¬': 'I',\n    'Ç': 'I',\n    'Ã': 'I',\n    'Ã': 'I',\n    'á¸®': 'I',\n    'Ä°': 'I',\n    'á»': 'I',\n    'È': 'I',\n    'Ã': 'I',\n    'á»': 'I',\n    'È': 'I',\n    'Äª': 'I',\n    'Ä®': 'I',\n    'Æ': 'I',\n    'Ä¨': 'I',\n    'á¸¬': 'I',\n    'ê¹': 'D',\n    'ê»': 'F',\n    'ê½': 'G',\n    'ê': 'R',\n    'ê': 'S',\n    'ê': 'T',\n    'ê¬': 'IS',\n    'Ä´': 'J',\n    'É': 'J',\n    'á¸°': 'K',\n    'Ç¨': 'K',\n    'Ä¶': 'K',\n    'â±©': 'K',\n    'ê': 'K',\n    'á¸²': 'K',\n    'Æ': 'K',\n    'á¸´': 'K',\n    'ê': 'K',\n    'ê': 'K',\n    'Ä¹': 'L',\n    'È½': 'L',\n    'Ä½': 'L',\n    'Ä»': 'L',\n    'á¸¼': 'L',\n    'á¸¶': 'L',\n    'á¸¸': 'L',\n    'â± ': 'L',\n    'ê': 'L',\n    'á¸º': 'L',\n    'Ä¿': 'L',\n    'â±¢': 'L',\n    'Ç': 'L',\n    'Å': 'L',\n    'Ç': 'LJ',\n    'á¸¾': 'M',\n    'á¹': 'M',\n    'á¹': 'M',\n    'â±®': 'M',\n    'Å': 'N',\n    'Å': 'N',\n    'Å': 'N',\n    'á¹': 'N',\n    'á¹': 'N',\n    'á¹': 'N',\n    'Ç¸': 'N',\n    'Æ': 'N',\n    'á¹': 'N',\n    'È ': 'N',\n    'Ç': 'N',\n    'Ã': 'N',\n    'Ç': 'NJ',\n    'Ã': 'O',\n    'Å': 'O',\n    'Ç': 'O',\n    'Ã': 'O',\n    'á»': 'O',\n    'á»': 'O',\n    'á»': 'O',\n    'á»': 'O',\n    'á»': 'O',\n    'Ã': 'O',\n    'Èª': 'O',\n    'È®': 'O',\n    'È°': 'O',\n    'á»': 'O',\n    'Å': 'O',\n    'È': 'O',\n    'Ã': 'O',\n    'á»': 'O',\n    'Æ ': 'O',\n    'á»': 'O',\n    'á»¢': 'O',\n    'á»': 'O',\n    'á»': 'O',\n    'á» ': 'O',\n    'È': 'O',\n    'ê': 'O',\n    'ê': 'O',\n    'Å': 'O',\n    'á¹': 'O',\n    'á¹': 'O',\n    'Æ': 'O',\n    'Çª': 'O',\n    'Ç¬': 'O',\n    'Ã': 'O',\n    'Ç¾': 'O',\n    'Ã': 'O',\n    'á¹': 'O',\n    'á¹': 'O',\n    'È¬': 'O',\n    'Æ¢': 'OI',\n    'ê': 'OO',\n    'Æ': 'E',\n    'Æ': 'O',\n    'È¢': 'OU',\n    'á¹': 'P',\n    'á¹': 'P',\n    'ê': 'P',\n    'Æ¤': 'P',\n    'ê': 'P',\n    'â±£': 'P',\n    'ê': 'P',\n    'ê': 'Q',\n    'ê': 'Q',\n    'Å': 'R',\n    'Å': 'R',\n    'Å': 'R',\n    'á¹': 'R',\n    'á¹': 'R',\n    'á¹': 'R',\n    'È': 'R',\n    'È': 'R',\n    'á¹': 'R',\n    'É': 'R',\n    'â±¤': 'R',\n    'ê¾': 'C',\n    'Æ': 'E',\n    'Å': 'S',\n    'á¹¤': 'S',\n    'Å ': 'S',\n    'á¹¦': 'S',\n    'Å': 'S',\n    'Å': 'S',\n    'È': 'S',\n    'á¹ ': 'S',\n    'á¹¢': 'S',\n    'á¹¨': 'S',\n    'Å¤': 'T',\n    'Å¢': 'T',\n    'á¹°': 'T',\n    'È': 'T',\n    'È¾': 'T',\n    'á¹ª': 'T',\n    'á¹¬': 'T',\n    'Æ¬': 'T',\n    'á¹®': 'T',\n    'Æ®': 'T',\n    'Å¦': 'T',\n    'â±¯': 'A',\n    'ê': 'L',\n    'Æ': 'M',\n    'É': 'V',\n    'ê¨': 'TZ',\n    'Ã': 'U',\n    'Å¬': 'U',\n    'Ç': 'U',\n    'Ã': 'U',\n    'á¹¶': 'U',\n    'Ã': 'U',\n    'Ç': 'U',\n    'Ç': 'U',\n    'Ç': 'U',\n    'Ç': 'U',\n    'á¹²': 'U',\n    'á»¤': 'U',\n    'Å°': 'U',\n    'È': 'U',\n    'Ã': 'U',\n    'á»¦': 'U',\n    'Æ¯': 'U',\n    'á»¨': 'U',\n    'á»°': 'U',\n    'á»ª': 'U',\n    'á»¬': 'U',\n    'á»®': 'U',\n    'È': 'U',\n    'Åª': 'U',\n    'á¹º': 'U',\n    'Å²': 'U',\n    'Å®': 'U',\n    'Å¨': 'U',\n    'á¹¸': 'U',\n    'á¹´': 'U',\n    'ê': 'V',\n    'á¹¾': 'V',\n    'Æ²': 'V',\n    'á¹¼': 'V',\n    'ê ': 'VY',\n    'áº': 'W',\n    'Å´': 'W',\n    'áº': 'W',\n    'áº': 'W',\n    'áº': 'W',\n    'áº': 'W',\n    'â±²': 'W',\n    'áº': 'X',\n    'áº': 'X',\n    'Ã': 'Y',\n    'Å¶': 'Y',\n    'Å¸': 'Y',\n    'áº': 'Y',\n    'á»´': 'Y',\n    'á»²': 'Y',\n    'Æ³': 'Y',\n    'á»¶': 'Y',\n    'á»¾': 'Y',\n    'È²': 'Y',\n    'É': 'Y',\n    'á»¸': 'Y',\n    'Å¹': 'Z',\n    'Å½': 'Z',\n    'áº': 'Z',\n    'â±«': 'Z',\n    'Å»': 'Z',\n    'áº': 'Z',\n    'È¤': 'Z',\n    'áº': 'Z',\n    'Æµ': 'Z',\n    'Ä²': 'IJ',\n    'Å': 'OE',\n    'á´': 'A',\n    'á´': 'AE',\n    'Ê': 'B',\n    'á´': 'B',\n    'á´': 'C',\n    'á´': 'D',\n    'á´': 'E',\n    'ê°': 'F',\n    'É¢': 'G',\n    'Ê': 'G',\n    'Ê': 'H',\n    'Éª': 'I',\n    'Ê': 'R',\n    'á´': 'J',\n    'á´': 'K',\n    'Ê': 'L',\n    'á´': 'L',\n    'á´': 'M',\n    'É´': 'N',\n    'á´': 'O',\n    'É¶': 'OE',\n    'á´': 'O',\n    'á´': 'OU',\n    'á´': 'P',\n    'Ê': 'R',\n    'á´': 'N',\n    'á´': 'R',\n    'ê±': 'S',\n    'á´': 'T',\n    'â±»': 'E',\n    'á´': 'R',\n    'á´': 'U',\n    'á´ ': 'V',\n    'á´¡': 'W',\n    'Ê': 'Y',\n    'á´¢': 'Z',\n    'Ã¡': 'a',\n    'Ä': 'a',\n    'áº¯': 'a',\n    'áº·': 'a',\n    'áº±': 'a',\n    'áº³': 'a',\n    'áºµ': 'a',\n    'Ç': 'a',\n    'Ã¢': 'a',\n    'áº¥': 'a',\n    'áº­': 'a',\n    'áº§': 'a',\n    'áº©': 'a',\n    'áº«': 'a',\n    'Ã¤': 'a',\n    'Ç': 'a',\n    'È§': 'a',\n    'Ç¡': 'a',\n    'áº¡': 'a',\n    'È': 'a',\n    'Ã ': 'a',\n    'áº£': 'a',\n    'È': 'a',\n    'Ä': 'a',\n    'Ä': 'a',\n    'á¶': 'a',\n    'áº': 'a',\n    'Ã¥': 'a',\n    'Ç»': 'a',\n    'á¸': 'a',\n    'â±¥': 'a',\n    'Ã£': 'a',\n    'ê³': 'aa',\n    'Ã¦': 'ae',\n    'Ç½': 'ae',\n    'Ç£': 'ae',\n    'êµ': 'ao',\n    'ê·': 'au',\n    'ê¹': 'av',\n    'ê»': 'av',\n    'ê½': 'ay',\n    'á¸': 'b',\n    'á¸': 'b',\n    'É': 'b',\n    'á¸': 'b',\n    'áµ¬': 'b',\n    'á¶': 'b',\n    'Æ': 'b',\n    'Æ': 'b',\n    'Éµ': 'o',\n    'Ä': 'c',\n    'Ä': 'c',\n    'Ã§': 'c',\n    'á¸': 'c',\n    'Ä': 'c',\n    'É': 'c',\n    'Ä': 'c',\n    'Æ': 'c',\n    'È¼': 'c',\n    'Ä': 'd',\n    'á¸': 'd',\n    'á¸': 'd',\n    'È¡': 'd',\n    'á¸': 'd',\n    'á¸': 'd',\n    'É': 'd',\n    'á¶': 'd',\n    'á¸': 'd',\n    'áµ­': 'd',\n    'á¶': 'd',\n    'Ä': 'd',\n    'É': 'd',\n    'Æ': 'd',\n    'Ä±': 'i',\n    'È·': 'j',\n    'É': 'j',\n    'Ê': 'j',\n    'Ç³': 'dz',\n    'Ç': 'dz',\n    'Ã©': 'e',\n    'Ä': 'e',\n    'Ä': 'e',\n    'È©': 'e',\n    'á¸': 'e',\n    'Ãª': 'e',\n    'áº¿': 'e',\n    'á»': 'e',\n    'á»': 'e',\n    'á»': 'e',\n    'á»': 'e',\n    'á¸': 'e',\n    'Ã«': 'e',\n    'Ä': 'e',\n    'áº¹': 'e',\n    'È': 'e',\n    'Ã¨': 'e',\n    'áº»': 'e',\n    'È': 'e',\n    'Ä': 'e',\n    'á¸': 'e',\n    'á¸': 'e',\n    'â±¸': 'e',\n    'Ä': 'e',\n    'á¶': 'e',\n    'É': 'e',\n    'áº½': 'e',\n    'á¸': 'e',\n    'ê«': 'et',\n    'á¸': 'f',\n    'Æ': 'f',\n    'áµ®': 'f',\n    'á¶': 'f',\n    'Çµ': 'g',\n    'Ä': 'g',\n    'Ç§': 'g',\n    'Ä£': 'g',\n    'Ä': 'g',\n    'Ä¡': 'g',\n    'É ': 'g',\n    'á¸¡': 'g',\n    'á¶': 'g',\n    'Ç¥': 'g',\n    'á¸«': 'h',\n    'È': 'h',\n    'á¸©': 'h',\n    'Ä¥': 'h',\n    'â±¨': 'h',\n    'á¸§': 'h',\n    'á¸£': 'h',\n    'á¸¥': 'h',\n    'É¦': 'h',\n    'áº': 'h',\n    'Ä§': 'h',\n    'Æ': 'hv',\n    'Ã­': 'i',\n    'Ä­': 'i',\n    'Ç': 'i',\n    'Ã®': 'i',\n    'Ã¯': 'i',\n    'á¸¯': 'i',\n    'á»': 'i',\n    'È': 'i',\n    'Ã¬': 'i',\n    'á»': 'i',\n    'È': 'i',\n    'Ä«': 'i',\n    'Ä¯': 'i',\n    'á¶': 'i',\n    'É¨': 'i',\n    'Ä©': 'i',\n    'á¸­': 'i',\n    'êº': 'd',\n    'ê¼': 'f',\n    'áµ¹': 'g',\n    'ê': 'r',\n    'ê': 's',\n    'ê': 't',\n    'ê­': 'is',\n    'Ç°': 'j',\n    'Äµ': 'j',\n    'Ê': 'j',\n    'É': 'j',\n    'á¸±': 'k',\n    'Ç©': 'k',\n    'Ä·': 'k',\n    'â±ª': 'k',\n    'ê': 'k',\n    'á¸³': 'k',\n    'Æ': 'k',\n    'á¸µ': 'k',\n    'á¶': 'k',\n    'ê': 'k',\n    'ê': 'k',\n    'Äº': 'l',\n    'Æ': 'l',\n    'É¬': 'l',\n    'Ä¾': 'l',\n    'Ä¼': 'l',\n    'á¸½': 'l',\n    'È´': 'l',\n    'á¸·': 'l',\n    'á¸¹': 'l',\n    'â±¡': 'l',\n    'ê': 'l',\n    'á¸»': 'l',\n    'Å': 'l',\n    'É«': 'l',\n    'á¶': 'l',\n    'É­': 'l',\n    'Å': 'l',\n    'Ç': 'lj',\n    'Å¿': 's',\n    'áº': 's',\n    'áº': 's',\n    'áº': 's',\n    'á¸¿': 'm',\n    'á¹': 'm',\n    'á¹': 'm',\n    'É±': 'm',\n    'áµ¯': 'm',\n    'á¶': 'm',\n    'Å': 'n',\n    'Å': 'n',\n    'Å': 'n',\n    'á¹': 'n',\n    'Èµ': 'n',\n    'á¹': 'n',\n    'á¹': 'n',\n    'Ç¹': 'n',\n    'É²': 'n',\n    'á¹': 'n',\n    'Æ': 'n',\n    'áµ°': 'n',\n    'á¶': 'n',\n    'É³': 'n',\n    'Ã±': 'n',\n    'Ç': 'nj',\n    'Ã³': 'o',\n    'Å': 'o',\n    'Ç': 'o',\n    'Ã´': 'o',\n    'á»': 'o',\n    'á»': 'o',\n    'á»': 'o',\n    'á»': 'o',\n    'á»': 'o',\n    'Ã¶': 'o',\n    'È«': 'o',\n    'È¯': 'o',\n    'È±': 'o',\n    'á»': 'o',\n    'Å': 'o',\n    'È': 'o',\n    'Ã²': 'o',\n    'á»': 'o',\n    'Æ¡': 'o',\n    'á»': 'o',\n    'á»£': 'o',\n    'á»': 'o',\n    'á»': 'o',\n    'á»¡': 'o',\n    'È': 'o',\n    'ê': 'o',\n    'ê': 'o',\n    'â±º': 'o',\n    'Å': 'o',\n    'á¹': 'o',\n    'á¹': 'o',\n    'Ç«': 'o',\n    'Ç­': 'o',\n    'Ã¸': 'o',\n    'Ç¿': 'o',\n    'Ãµ': 'o',\n    'á¹': 'o',\n    'á¹': 'o',\n    'È­': 'o',\n    'Æ£': 'oi',\n    'ê': 'oo',\n    'É': 'e',\n    'á¶': 'e',\n    'É': 'o',\n    'á¶': 'o',\n    'È£': 'ou',\n    'á¹': 'p',\n    'á¹': 'p',\n    'ê': 'p',\n    'Æ¥': 'p',\n    'áµ±': 'p',\n    'á¶': 'p',\n    'ê': 'p',\n    'áµ½': 'p',\n    'ê': 'p',\n    'ê': 'q',\n    'Ê ': 'q',\n    'É': 'q',\n    'ê': 'q',\n    'Å': 'r',\n    'Å': 'r',\n    'Å': 'r',\n    'á¹': 'r',\n    'á¹': 'r',\n    'á¹': 'r',\n    'È': 'r',\n    'É¾': 'r',\n    'áµ³': 'r',\n    'È': 'r',\n    'á¹': 'r',\n    'É¼': 'r',\n    'áµ²': 'r',\n    'á¶': 'r',\n    'É': 'r',\n    'É½': 'r',\n    'â': 'c',\n    'ê¿': 'c',\n    'É': 'e',\n    'É¿': 'r',\n    'Å': 's',\n    'á¹¥': 's',\n    'Å¡': 's',\n    'á¹§': 's',\n    'Å': 's',\n    'Å': 's',\n    'È': 's',\n    'á¹¡': 's',\n    'á¹£': 's',\n    'á¹©': 's',\n    'Ê': 's',\n    'áµ´': 's',\n    'á¶': 's',\n    'È¿': 's',\n    'É¡': 'g',\n    'á´': 'o',\n    'á´': 'o',\n    'á´': 'u',\n    'Å¥': 't',\n    'Å£': 't',\n    'á¹±': 't',\n    'È': 't',\n    'È¶': 't',\n    'áº': 't',\n    'â±¦': 't',\n    'á¹«': 't',\n    'á¹­': 't',\n    'Æ­': 't',\n    'á¹¯': 't',\n    'áµµ': 't',\n    'Æ«': 't',\n    'Ê': 't',\n    'Å§': 't',\n    'áµº': 'th',\n    'É': 'a',\n    'á´': 'ae',\n    'Ç': 'e',\n    'áµ·': 'g',\n    'É¥': 'h',\n    'Ê®': 'h',\n    'Ê¯': 'h',\n    'á´': 'i',\n    'Ê': 'k',\n    'ê': 'l',\n    'É¯': 'm',\n    'É°': 'm',\n    'á´': 'oe',\n    'É¹': 'r',\n    'É»': 'r',\n    'Éº': 'r',\n    'â±¹': 'r',\n    'Ê': 't',\n    'Ê': 'v',\n    'Ê': 'w',\n    'Ê': 'y',\n    'ê©': 'tz',\n    'Ãº': 'u',\n    'Å­': 'u',\n    'Ç': 'u',\n    'Ã»': 'u',\n    'á¹·': 'u',\n    'Ã¼': 'u',\n    'Ç': 'u',\n    'Ç': 'u',\n    'Ç': 'u',\n    'Ç': 'u',\n    'á¹³': 'u',\n    'á»¥': 'u',\n    'Å±': 'u',\n    'È': 'u',\n    'Ã¹': 'u',\n    'á»§': 'u',\n    'Æ°': 'u',\n    'á»©': 'u',\n    'á»±': 'u',\n    'á»«': 'u',\n    'á»­': 'u',\n    'á»¯': 'u',\n    'È': 'u',\n    'Å«': 'u',\n    'á¹»': 'u',\n    'Å³': 'u',\n    'á¶': 'u',\n    'Å¯': 'u',\n    'Å©': 'u',\n    'á¹¹': 'u',\n    'á¹µ': 'u',\n    'áµ«': 'ue',\n    'ê¸': 'um',\n    'â±´': 'v',\n    'ê': 'v',\n    'á¹¿': 'v',\n    'Ê': 'v',\n    'á¶': 'v',\n    'â±±': 'v',\n    'á¹½': 'v',\n    'ê¡': 'vy',\n    'áº': 'w',\n    'Åµ': 'w',\n    'áº': 'w',\n    'áº': 'w',\n    'áº': 'w',\n    'áº': 'w',\n    'â±³': 'w',\n    'áº': 'w',\n    'áº': 'x',\n    'áº': 'x',\n    'á¶': 'x',\n    'Ã½': 'y',\n    'Å·': 'y',\n    'Ã¿': 'y',\n    'áº': 'y',\n    'á»µ': 'y',\n    'á»³': 'y',\n    'Æ´': 'y',\n    'á»·': 'y',\n    'á»¿': 'y',\n    'È³': 'y',\n    'áº': 'y',\n    'É': 'y',\n    'á»¹': 'y',\n    'Åº': 'z',\n    'Å¾': 'z',\n    'áº': 'z',\n    'Ê': 'z',\n    'â±¬': 'z',\n    'Å¼': 'z',\n    'áº': 'z',\n    'È¥': 'z',\n    'áº': 'z',\n    'áµ¶': 'z',\n    'á¶': 'z',\n    'Ê': 'z',\n    'Æ¶': 'z',\n    'É': 'z',\n    'ï¬': 'ff',\n    'ï¬': 'ffi',\n    'ï¬': 'ffl',\n    'ï¬': 'fi',\n    'ï¬': 'fl',\n    'Ä³': 'ij',\n    'Å': 'oe',\n    'ï¬': 'st',\n    'â': 'a',\n    'â': 'e',\n    'áµ¢': 'i',\n    'â±¼': 'j',\n    'â': 'o',\n    'áµ£': 'r',\n    'áµ¤': 'u',\n    'áµ¥': 'v',\n    'â': 'x'\n};\n","import { TypeaheadDirective } from './typeahead.directive';\n\nexport class TypeaheadOptions {\n  placement: string;\n  animation: boolean;\n  typeaheadRef: TypeaheadDirective;\n\n  constructor(options: TypeaheadOptions) {\n    Object.assign(this, options);\n  }\n}\n","export class TypeaheadMatch {\n  readonly value: string;\n\n// tslint:disable-next-line:no-any\n  readonly item: any;\n  protected header: boolean;\n\n// tslint:disable-next-line:no-any\n  constructor(item: any, value: string = item, header = false) {\n    this.item = item;\n    this.value = value;\n    this.header = header;\n  }\n\n  isHeader(): boolean {\n    return this.header;\n  }\n\n  toString(): string {\n    return this.value;\n  }\n}\n","import { latinMap } from './latin-map';\n\nexport function latinize(str: string): string {\n  if (!str) {\n    return '';\n  }\n\n  return str.replace(/[^A-Za-z0-9\\[\\] ]/g, function (a: string): string {\n    return latinMap[a] || a;\n  });\n}\n\nexport function escapeRegexp(queryToEscape: string): string {\n  // Regex: capture the whole query string and replace it with the string\n  // that will be used to match the results, for example if the capture is\n  // 'a' the result will be \\a\n  return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n\n/* tslint:disable */\nexport function tokenize(str: string,\n                         wordRegexDelimiters = ' ',\n                         phraseRegexDelimiters = ''): Array<string> {\n  /* tslint:enable */\n  const regexStr = `(?:[${phraseRegexDelimiters}])([^${phraseRegexDelimiters}]+)` +\n    `(?:[${phraseRegexDelimiters}])|([^${wordRegexDelimiters}]+)`;\n  const preTokenized: string[] = str.split(new RegExp(regexStr, 'g'));\n  const result: string[] = [];\n  const preTokenizedLength: number = preTokenized.length;\n  let token: string;\n  const replacePhraseDelimiters = new RegExp(`[${phraseRegexDelimiters}]+`, 'g');\n\n  for (let i = 0; i < preTokenizedLength; i += 1) {\n    token = preTokenized[i];\n    if (token && token.length && token !== wordRegexDelimiters) {\n      result.push(token.replace(replacePhraseDelimiters, ''));\n    }\n  }\n\n  return result;\n}\n\n// tslint:disable-next-line:no-any\nexport function getValueFromObject(object: any, option: string): string {\n  if (!option || typeof object !== 'object') {\n    return object.toString();\n  }\n\n  if (option.endsWith('()')) {\n    const functionName = option.slice(0, option.length - 2);\n\n    return object[functionName]().toString();\n  }\n\n  const properties: string = option\n    .replace(/\\[(\\w+)\\]/g, '.$1')\n    .replace(/^\\./, '');\n  const propertiesArray: string[] = properties.split('.');\n\n  for (const property of propertiesArray) {\n    if (property in object) {\n      // tslint:disable-next-line\n      object = object[property];\n    }\n  }\n  if (!object) {return ''; }\n\n  return object.toString();\n}\n","import {\n  animate,\n  style,\n  AnimationTriggerMetadata,\n  state,\n  transition,\n  trigger\n} from '@angular/animations';\n\nexport const TYPEAHEAD_ANIMATION_TIMING = '220ms cubic-bezier(0, 0, 0.2, 1)';\n\nexport const typeaheadAnimation: AnimationTriggerMetadata =\n  trigger('typeaheadAnimation', [\n    state('animated-down', style({ height: '*', overflow: 'hidden'})),\n    transition('* => animated-down', [\n      style({ height: 0, overflow: 'hidden' }),\n      animate(TYPEAHEAD_ANIMATION_TIMING)\n    ]),\n    state('animated-up', style({ height: '*', overflow: 'hidden'})),\n    transition('* => animated-up', [\n      style({ height: '*', overflow: 'hidden' }),\n      animate(TYPEAHEAD_ANIMATION_TIMING)\n    ]),\n    transition('* => unanimated', animate('0s'))\n  ]);\n","// tslint:disable:max-file-line-count max-line-length\nimport {\n  Component,\n  ElementRef,\n  HostListener,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\n\nimport { isBs3, Utils } from 'ngx-bootstrap/utils';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\nimport { latinize } from './typeahead-utils';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { typeaheadAnimation } from './typeahead-animations';\n\nimport { take } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'typeahead-container',\n  templateUrl: './typeahead-container.component.html',\n  host: {\n    class: 'dropdown open bottom',\n    '[class.dropdown-menu]': 'isBs4',\n    '[style.overflow-y]' : `isBs4 && needScrollbar ? 'scroll': 'visible'`,\n    '[style.height]': `isBs4 && needScrollbar ? guiHeight: 'auto'`,\n    '[style.visibility]': `visibility`,\n    '[class.dropup]': 'dropup',\n    style: 'position: absolute;display: block;'\n  },\n  styles: [\n    `\n    :host.dropdown {\n      z-index: 1000;\n    }\n  `\n  ],\n  animations: [typeaheadAnimation]\n})\nexport class TypeaheadContainerComponent {\n  parent: TypeaheadDirective;\n  query: string[] | string;\n  isFocused = false;\n  top: string;\n  left: string;\n  display: string;\n  placement: string;\n  dropup: boolean;\n  guiHeight: string;\n  needScrollbar: boolean;\n  animationState: string;\n  visibility = 'hidden';\n  height = 0;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  protected _active: TypeaheadMatch;\n  protected _matches: TypeaheadMatch[] = [];\n\n  @ViewChild('ulElement', { static: false })\n  private ulElement: ElementRef;\n\n  @ViewChildren('liElements')\n  private liElements: QueryList<ElementRef>;\n\n  constructor(\n    private positionService: PositioningService,\n    private renderer: Renderer2,\n    public element: ElementRef\n  ) { }\n\n  get active(): TypeaheadMatch {\n    return this._active;\n  }\n\n  get matches(): TypeaheadMatch[] {\n    return this._matches;\n  }\n\n  set matches(value: TypeaheadMatch[]) {\n    this.positionService.setOptions({\n      modifiers: { flip: { enabled: this.adaptivePosition } },\n      allowedPositions: ['top', 'bottom']\n    });\n\n    this.positionService.event$\n      .pipe(\n        take(1)\n      )\n      .subscribe(() => {\n        this.positionService.disable();\n        this.visibility = this.typeaheadScrollable ? 'hidden' : 'visible';\n\n        if (this.isAnimated) {\n          this.animationState = this.isTopPosition ? 'animated-up' : 'animated-down';\n\n          return;\n        }\n\n        this.animationState = 'unanimated';\n      });\n\n    this._matches = value;\n\n    this.needScrollbar = this.typeaheadScrollable && this.typeaheadOptionsInScrollableView < this.matches.length;\n\n    if (this.typeaheadScrollable) {\n      setTimeout(() => {\n        this.setScrollableMode();\n      });\n    }\n\n    if (this.typeaheadIsFirstItemActive && this._matches.length > 0) {\n      this._active = this._matches[0];\n\n      if (this._active.isHeader()) {\n        this.nextActiveMatch();\n      }\n    }\n\n    if (this._active && !this.typeaheadIsFirstItemActive) {\n      const concurrency = this._matches.find(match => match.value === this._active.value);\n\n      if (concurrency) {\n        this.selectActive(concurrency);\n\n        return;\n      }\n\n      this._active = null;\n    }\n  }\n\n  get isTopPosition(): boolean {\n    return this.element.nativeElement.classList.contains('top');\n  }\n\n  // tslint:disable-next-line:no-any\n  get optionsListTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.optionsListTemplate : undefined;\n  }\n\n  get isAnimated(): boolean {\n    return this.parent ? this.parent.isAnimated : false;\n  }\n\n  get adaptivePosition(): boolean {\n    return this.parent ? this.parent.adaptivePosition : false;\n  }\n\n  get typeaheadScrollable(): boolean {\n    return this.parent ? this.parent.typeaheadScrollable : false;\n  }\n\n  get typeaheadOptionsInScrollableView(): number {\n    return this.parent ? this.parent.typeaheadOptionsInScrollableView : 5;\n  }\n\n  get typeaheadIsFirstItemActive(): boolean {\n    return this.parent ? this.parent.typeaheadIsFirstItemActive : true;\n  }\n// tslint:disable-next-line:no-any\n  get itemTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.typeaheadItemTemplate : undefined;\n  }\n\n  selectActiveMatch(isActiveItemChanged?: boolean): void {\n    if (this._active && this.parent.typeaheadSelectFirstItem) {\n      this.selectMatch(this._active);\n    }\n\n    if (!this.parent.typeaheadSelectFirstItem && isActiveItemChanged) {\n      this.selectMatch(this._active);\n    }\n  }\n\n  positionServiceEnable(): void {\n    this.positionService.enable();\n  }\n\n  prevActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n\n    this._active = this.matches[\n      index - 1 < 0 ? this.matches.length - 1 : index - 1\n    ];\n\n    if (this._active.isHeader()) {\n      this.prevActiveMatch();\n    }\n\n    if (this.typeaheadScrollable) {\n      this.scrollPrevious(index);\n    }\n  }\n\n  nextActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n\n    this._active = this.matches[\n      index + 1 > this.matches.length - 1 ? 0 : index + 1\n    ];\n\n    if (this._active.isHeader()) {\n      this.nextActiveMatch();\n    }\n\n    if (this.typeaheadScrollable) {\n      this.scrollNext(index);\n    }\n  }\n\n  selectActive(value: TypeaheadMatch): void {\n    this.isFocused = true;\n    this._active = value;\n  }\n\n  highlight(match: TypeaheadMatch, query: string[] | string): string {\n    let itemStr: string = match.value;\n    let itemStrHelper: string = (this.parent && this.parent.typeaheadLatinize\n      ? latinize(itemStr)\n      : itemStr).toLowerCase();\n    let startIdx: number;\n    let tokenLen: number;\n    // Replaces the capture string with the same string inside of a \"strong\" tag\n    if (typeof query === 'object') {\n      const queryLen: number = query.length;\n      for (let i = 0; i < queryLen; i += 1) {\n        // query[i] is already latinized and lower case\n        startIdx = itemStrHelper.indexOf(query[i]);\n        tokenLen = query[i].length;\n        if (startIdx >= 0 && tokenLen > 0) {\n          itemStr =\n            `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n            `${itemStr.substring(startIdx + tokenLen)}`;\n          itemStrHelper =\n            `${itemStrHelper.substring(0, startIdx)}        ${' '.repeat(tokenLen)}         ` +\n            `${itemStrHelper.substring(startIdx + tokenLen)}`;\n        }\n      }\n    } else if (query) {\n      // query is already latinized and lower case\n      startIdx = itemStrHelper.indexOf(query);\n      tokenLen = query.length;\n      if (startIdx >= 0 && tokenLen > 0) {\n        itemStr =\n          `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n          `${itemStr.substring(startIdx + tokenLen)}`;\n      }\n    }\n\n    return itemStr;\n  }\n\n  @HostListener('mouseleave')\n  @HostListener('blur')\n  focusLost(): void {\n    this.isFocused = false;\n  }\n\n  isActive(value: TypeaheadMatch): boolean {\n    return this._active === value;\n  }\n\n  selectMatch(value: TypeaheadMatch, e: Event = void 0): boolean {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    this.parent.changeModel(value);\n    setTimeout(() => this.parent.typeaheadOnSelect.emit(value), 0);\n\n    return false;\n  }\n\n  setScrollableMode(): void {\n    if (!this.ulElement) {\n      this.ulElement = this.element;\n    }\n    if (this.liElements.first) {\n      const ulStyles = Utils.getStyles(this.ulElement.nativeElement);\n      const liStyles = Utils.getStyles(this.liElements.first.nativeElement);\n      const ulPaddingBottom = parseFloat((ulStyles['padding-bottom'] ? ulStyles['padding-bottom'] : '')\n        .replace('px', ''));\n      const ulPaddingTop = parseFloat((ulStyles['padding-top'] ? ulStyles['padding-top'] : '0')\n        .replace('px', ''));\n      const optionHeight = parseFloat((liStyles.height ? liStyles.height : '0')\n        .replace('px', ''));\n      const height = this.typeaheadOptionsInScrollableView * optionHeight;\n      this.guiHeight = `${height + ulPaddingTop + ulPaddingBottom}px`;\n    }\n    this.renderer.setStyle(this.element.nativeElement, 'visibility', 'visible');\n  }\n\n  scrollPrevious(index: number): void {\n    if (index === 0) {\n      this.scrollToBottom();\n\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index - 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop = liElement.nativeElement.offsetTop;\n      }\n    }\n  }\n\n  scrollNext(index: number): void {\n    if (index + 1 > this.matches.length - 1) {\n      this.scrollToTop();\n\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index + 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop =\n          liElement.nativeElement.offsetTop -\n          Number(this.ulElement.nativeElement.offsetHeight) +\n          Number(liElement.nativeElement.offsetHeight);\n      }\n    }\n  }\n\n\n  private isScrolledIntoView = function (elem: HTMLElement) {\n    const containerViewTop: number = this.ulElement.nativeElement.scrollTop;\n    const containerViewBottom = containerViewTop + Number(this.ulElement.nativeElement.offsetHeight);\n    const elemTop = elem.offsetTop;\n    const elemBottom = elemTop + elem.offsetHeight;\n\n    return ((elemBottom <= containerViewBottom) && (elemTop >= containerViewTop));\n  };\n\n  private scrollToBottom(): void {\n    this.ulElement.nativeElement.scrollTop = this.ulElement.nativeElement.scrollHeight;\n  }\n\n  private scrollToTop(): void {\n    this.ulElement.nativeElement.scrollTop = 0;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/** Default values provider for typeahead */\n@Injectable()\nexport class TypeaheadConfig {\n  /** sets use adaptive position */\n  adaptivePosition = false;\n  /** turn on/off animation */\n  isAnimated = false;\n  /** used to hide results on blur */\n  hideResultsOnBlur = true;\n  /** used to choose the first item in typeahead container */\n  selectFirstItem = true;\n  /** used to active/inactive the first item in typeahead container */\n  isFirstItemActive = true;\n  /** used to choose set minimal no of characters that needs to\n   * be entered before typeahead kicks-in\n   */\n  minLength = 1;\n}\n","/* tslint:disable:max-file-line-count */\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { from, Subscription, isObservable } from 'rxjs';\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { TypeaheadConfig } from './typeahead.config';\nimport { getValueFromObject, latinize, tokenize } from './typeahead-utils';\nimport { debounceTime, filter, mergeMap, switchMap, toArray } from 'rxjs/operators';\n\n@Directive({selector: '[typeahead]', exportAs: 'bs-typeahead'})\nexport class TypeaheadDirective implements OnInit, OnDestroy {\n  /** options source, can be Array of strings, objects or\n   * an Observable for external matching process\n   */\n    // tslint:disable-next-line:no-any\n  @Input() typeahead: any;\n  /** minimal no of characters that needs to be entered before\n   * typeahead kicks-in. When set to 0, typeahead shows on focus with full\n   * list of options (limited as normal by typeaheadOptionsLimit)\n   */\n  @Input() typeaheadMinLength: number = void 0;\n  /** sets use adaptive position */\n  @Input() adaptivePosition: boolean;\n  /** turn on/off animation */\n  @Input() isAnimated = false;\n  /** minimal wait time after last character typed before typeahead kicks-in */\n  @Input() typeaheadWaitMs: number;\n  /** maximum length of options items list. The default value is 20 */\n  @Input() typeaheadOptionsLimit: number;\n  /** when options source is an array of objects, the name of field\n   * that contains the options value, we use array item as option in case\n   * of this field is missing. Supports nested properties and methods.\n   */\n  @Input() typeaheadOptionField: string;\n  /** when options source is an array of objects, the name of field that\n   * contains the group value, matches are grouped by this field when set.\n   */\n  @Input() typeaheadGroupField: string;\n  /** should be used only in case of typeahead attribute is array.\n   * If true - loading of options will be async, otherwise - sync.\n   * true make sense if options array is large.\n   */\n  @Input() typeaheadAsync: boolean = void 0;\n  /** match latin symbols.\n   * If true the word sÃºper would match super and vice versa.\n   */\n  @Input() typeaheadLatinize = true;\n  /** Can be use to search words by inserting a single white space between each characters\n   *  for example 'C a l i f o r n i a' will match 'California'.\n   */\n  @Input() typeaheadSingleWords = true;\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to break words. Defaults to space.\n   */\n  @Input() typeaheadWordDelimiters = ' ';\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to match exact phrase.\n   * Defaults to simple and double quotes.\n   */\n  @Input() typeaheadPhraseDelimiters = '\\'\"';\n  /** used to specify a custom item template.\n   * Template variables exposed are called item and index;\n   */\n    // tslint:disable-next-line:no-any\n  @Input() typeaheadItemTemplate: TemplateRef<any>;\n  /** used to specify a custom options list template.\n   * Template variables: matches, itemTemplate, query\n   */\n    // tslint:disable-next-line:no-any\n  @Input() optionsListTemplate: TemplateRef<any>;\n  /** specifies if typeahead is scrollable  */\n  @Input() typeaheadScrollable = false;\n  /** specifies number of options to show in scroll view  */\n  @Input() typeaheadOptionsInScrollableView = 5;\n  /** used to hide result on blur */\n  @Input() typeaheadHideResultsOnBlur: boolean;\n  /** fired when an options list was opened and the user clicked Tab\n   * If a value equal true, it will be chosen first or active item in the list\n   * If value equal false, it will be chosen an active item in the list or nothing\n   */\n  @Input() typeaheadSelectFirstItem = true;\n  /** makes active first item in a list */\n  @Input() typeaheadIsFirstItemActive = true;\n  /** fired when 'busy' state of this component was changed,\n   * fired on async mode only, returns boolean\n   */\n  @Output() typeaheadLoading = new EventEmitter<boolean>();\n  /** fired on every key event and returns true\n   * in case of matches are not detected\n   */\n  @Output() typeaheadNoResults = new EventEmitter<boolean>();\n  /** fired when option was selected, return object with data of this option */\n  @Output() typeaheadOnSelect = new EventEmitter<TypeaheadMatch>();\n  /** fired when blur event occurs. returns the active item */\n  // tslint:disable-next-line:no-any\n  @Output() typeaheadOnBlur = new EventEmitter<any>();\n\n  /**\n   * A selector specifying the element the typeahead should be appended to.\n   */\n  @Input() container: string;\n\n  /** This attribute indicates that the dropdown should be opened upwards */\n  @Input() dropup = false;\n\n  // not yet implemented\n  /** if false restrict model values to the ones selected from the popup only will be provided */\n  // @Input() protected typeaheadEditable:boolean;\n  /** if false the first match automatically will not be focused as you type */\n  // @Input() protected typeaheadFocusFirst:boolean;\n  /** format the ng-model result after selection */\n  // @Input() protected typeaheadInputFormatter:any;\n  /** if true automatically select an item when there is one option that exactly matches the user input */\n  // @Input() protected typeaheadSelectOnExact:boolean;\n  /**  if true select the currently highlighted match on blur */\n  // @Input() protected typeaheadSelectOnBlur:boolean;\n  /**  if false don't focus the input element the typeahead directive is associated with on selection */\n    // @Input() protected typeaheadFocusOnSelect:boolean;\n\n  _container: TypeaheadContainerComponent;\n  isActiveItemChanged = false;\n  isTypeaheadOptionsListActive = false;\n\n  // tslint:disable-next-line:no-any\n  protected keyUpEventEmitter: EventEmitter<any> = new EventEmitter();\n  protected _matches: TypeaheadMatch[];\n  protected placement = 'bottom-left';\n  // protected popup:ComponentRef<TypeaheadContainerComponent>;\n\n  private _typeahead: ComponentLoader<TypeaheadContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _outsideClickListener: Function;\n\n  constructor(\n    cis: ComponentLoaderFactory,\n    config: TypeaheadConfig,\n    private changeDetection: ChangeDetectorRef,\n    private element: ElementRef,\n    private ngControl: NgControl,\n    private renderer: Renderer2,\n    viewContainerRef: ViewContainerRef\n  ) {\n\n    this._typeahead = cis.createLoader<TypeaheadContainerComponent>(\n      element,\n      viewContainerRef,\n      renderer\n    )\n      .provide({ provide: TypeaheadConfig, useValue: config });\n\n    Object.assign(this,\n      {\n        typeaheadHideResultsOnBlur: config.hideResultsOnBlur,\n        typeaheadSelectFirstItem: config.selectFirstItem,\n        typeaheadIsFirstItemActive: config.isFirstItemActive,\n        typeaheadMinLength: config.minLength,\n        adaptivePosition: config.adaptivePosition,\n        isAnimated: config.isAnimated\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.typeaheadOptionsLimit = this.typeaheadOptionsLimit || 20;\n\n    this.typeaheadMinLength =\n      this.typeaheadMinLength === void 0 ? 1 : this.typeaheadMinLength;\n\n    this.typeaheadWaitMs = this.typeaheadWaitMs || 0;\n\n    // async should be false in case of array\n    if (\n      this.typeaheadAsync === undefined &&\n      !(isObservable(this.typeahead))\n    ) {\n      this.typeaheadAsync = false;\n    }\n\n    if (isObservable(this.typeahead)) {\n      this.typeaheadAsync = true;\n    }\n\n    if (this.typeaheadAsync) {\n      this.asyncActions();\n    } else {\n      this.syncActions();\n    }\n  }\n\n  @HostListener('input', ['$event'])\n  // tslint:disable-next-line:no-any\n  onInput(e: any): void {\n    // For `<input>`s, use the `value` property. For others that don't have a\n    // `value` (such as `<span contenteditable=\"true\">`), use either\n    // `textContent` or `innerText` (depending on which one is supported, i.e.\n    // Firefox or IE).\n    const value =\n      e.target.value !== undefined\n        ? e.target.value\n        : e.target.textContent !== undefined\n        ? e.target.textContent\n        : e.target.innerText;\n    if (value != null && value.trim().length >= this.typeaheadMinLength) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(e.target.value);\n    } else {\n      this.typeaheadLoading.emit(false);\n      this.typeaheadNoResults.emit(false);\n      this.hide();\n    }\n  }\n\n  @HostListener('keyup', ['$event'])\n  onChange(event: KeyboardEvent): void {\n    if (this._container) {\n      // esc\n      /* tslint:disable-next-line: deprecation */\n      if (event.keyCode === 27 || event.key === 'Escape') {\n        this.hide();\n\n        return;\n      }\n\n      // up\n      /* tslint:disable-next-line: deprecation */\n      if (event.keyCode === 38 || event.key === 'ArrowUp') {\n        this.isActiveItemChanged = true;\n        this._container.prevActiveMatch();\n\n        return;\n      }\n\n      // down\n      /* tslint:disable-next-line: deprecation */\n      if (event.keyCode === 40 || event.key === 'ArrowDown') {\n        this.isActiveItemChanged = true;\n        this._container.nextActiveMatch();\n\n        return;\n      }\n\n      // enter\n      /* tslint:disable-next-line: deprecation */\n      if (event.keyCode === 13 || event.key === 'Enter') {\n        this._container.selectActiveMatch();\n\n        return;\n      }\n    }\n  }\n\n  @HostListener('click')\n  @HostListener('focus')\n  onFocus(): void {\n    if (this.typeaheadMinLength === 0) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(this.element.nativeElement.value || '');\n    }\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    if (this._container && !this._container.isFocused) {\n      this.typeaheadOnBlur.emit(this._container.active);\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeydown(event: KeyboardEvent): void {\n    // no container - no problems\n    if (!this._container) {\n      return;\n    }\n\n    /* tslint:disable-next-line: deprecation */\n    if (event.keyCode === 9 || event.key === 'Tab' || event.keyCode === 13 || event.key === 'Enter') {\n      event.preventDefault();\n      if (this.typeaheadSelectFirstItem) {\n        this._container.selectActiveMatch();\n\n        return;\n      }\n\n      if (!this.typeaheadSelectFirstItem) {\n        this._container.selectActiveMatch(this.isActiveItemChanged);\n        this.isActiveItemChanged = false;\n        this.hide();\n      }\n    }\n  }\n\n  changeModel(match: TypeaheadMatch): void {\n    const valueStr: string = match.value;\n    this.ngControl.viewToModelUpdate(valueStr);\n    (this.ngControl.control).setValue(valueStr);\n    this.changeDetection.markForCheck();\n    this.hide();\n  }\n\n  get matches(): TypeaheadMatch[] {\n    return this._matches;\n  }\n\n  show(): void {\n    this._typeahead\n      .attach(TypeaheadContainerComponent)\n      // todo: add append to body, after updating positioning service\n      .to(this.container)\n      .position({attachment: `${this.dropup ? 'top' : 'bottom'} start`})\n      .show({\n        typeaheadRef: this,\n        placement: this.placement,\n        animation: false,\n        dropup: this.dropup\n      });\n\n    this._outsideClickListener = this.renderer.listen('document', 'click', (e: MouseEvent) => {\n      if (this.typeaheadMinLength === 0 && this.element.nativeElement.contains(e.target)) {\n        return undefined;\n      }\n      if (!this.typeaheadHideResultsOnBlur || this.element.nativeElement.contains(e.target)) {\n        return undefined;\n      }\n      this.onOutsideClick();\n    });\n\n    this._container = this._typeahead.instance;\n    this._container.parent = this;\n    // This improves the speed as it won't have to be done for each list item\n    const normalizedQuery = (this.typeaheadLatinize\n      ? latinize(this.ngControl.control.value)\n      : this.ngControl.control.value)\n      .toString()\n      .toLowerCase();\n    this._container.query = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n    this._container.matches = this._matches;\n    this.element.nativeElement.focus();\n  }\n\n  hide(): void {\n    if (this._typeahead.isShown) {\n      this._typeahead.hide();\n      this._outsideClickListener();\n      this._container = null;\n    }\n  }\n\n  onOutsideClick(): void {\n    if (this._container && !this._container.isFocused) {\n      this.hide();\n    }\n  }\n\n  ngOnDestroy() {\n    // clean up subscriptions\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._typeahead.dispose();\n  }\n\n  protected asyncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .pipe(\n          debounceTime(this.typeaheadWaitMs),\n          switchMap(() => this.typeahead)\n        )\n        .subscribe((matches: TypeaheadMatch[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected syncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .pipe(\n          debounceTime(this.typeaheadWaitMs),\n          mergeMap((value: string) => {\n            const normalizedQuery = this.normalizeQuery(value);\n\n            return from(this.typeahead)\n              .pipe(\n                filter((option: TypeaheadMatch) => {\n\n                  return (\n                    option &&\n                    this.testMatch(this.normalizeOption(option), normalizedQuery)\n                  );\n                }),\n                toArray()\n              );\n          })\n        )\n        .subscribe((matches: TypeaheadMatch[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  // tslint:disable-next-line:no-any\n  protected normalizeOption(option: any): any {\n    const optionValue: string = getValueFromObject(\n      option,\n      this.typeaheadOptionField\n    );\n    const normalizedOption = this.typeaheadLatinize\n      ? latinize(optionValue)\n      : optionValue;\n\n    return normalizedOption.toLowerCase();\n  }\n\n  protected normalizeQuery(value: string): string | string[] {\n    // If singleWords, break model here to not be doing extra work on each\n    // iteration\n    let normalizedQuery: string | string[] = (this.typeaheadLatinize\n      ? latinize(value)\n      : value)\n      .toString()\n      .toLowerCase();\n    normalizedQuery = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n\n    return normalizedQuery;\n  }\n\n  protected testMatch(match: string, test: string[] | string): boolean {\n    let spaceLength: number;\n\n    if (typeof test === 'object') {\n      spaceLength = test.length;\n      for (let i = 0; i < spaceLength; i += 1) {\n        if (test[i].length > 0 && match.indexOf(test[i]) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return match.indexOf(test) >= 0;\n  }\n\n  protected finalizeAsyncCall(matches: TypeaheadMatch[]): void {\n    this.prepareMatches(matches || []);\n\n    this.typeaheadLoading.emit(false);\n    this.typeaheadNoResults.emit(!this.hasMatches());\n\n    if (!this.hasMatches()) {\n      this.hide();\n\n      return;\n    }\n\n    if (this._container) {\n      // fix: remove usage of ngControl internals\n      const _controlValue = (this.typeaheadLatinize\n        ? latinize(this.ngControl.control.value)\n        : this.ngControl.control.value) || '';\n      // This improves the speed as it won't have to be done for each list item\n      const normalizedQuery = _controlValue.toString().toLowerCase();\n      this._container.query = this.typeaheadSingleWords\n        ? tokenize(\n          normalizedQuery,\n          this.typeaheadWordDelimiters,\n          this.typeaheadPhraseDelimiters\n        )\n        : normalizedQuery;\n      this._container.matches = this._matches;\n    } else {\n      this.show();\n    }\n  }\n\n  protected prepareMatches(options: TypeaheadMatch[]): void {\n    const limited: TypeaheadMatch[] = options.slice(0, this.typeaheadOptionsLimit);\n\n    if (this.typeaheadGroupField) {\n      let matches: TypeaheadMatch[] = [];\n\n      // extract all group names\n      const groups = limited\n        .map((option: TypeaheadMatch) =>\n          getValueFromObject(option, this.typeaheadGroupField)\n        )\n        .filter((v: string, i: number, a: string[]) => a.indexOf(v) === i);\n\n      groups.forEach((group: string) => {\n        // add group header to array of matches\n        matches.push(new TypeaheadMatch(group, group, true));\n\n        // add each item of group to array of matches\n        matches = matches.concat(\n          limited\n            .filter(\n              // tslint:disable-next-line:no-any\n              (option: any) =>\n                getValueFromObject(option, this.typeaheadGroupField) === group\n            )\n            .map(\n              // tslint:disable-next-line:no-any\n              (option: any) =>\n                new TypeaheadMatch(\n                  option,\n                  getValueFromObject(option, this.typeaheadOptionField)\n                )\n            )\n        );\n      });\n\n      this._matches = matches;\n    } else {\n      this._matches = limited.map(\n        // tslint:disable-next-line:no-any\n        (option: any) =>\n          new TypeaheadMatch(\n            option,\n            getValueFromObject(option, this.typeaheadOptionField)\n          )\n      );\n    }\n  }\n\n  protected hasMatches(): boolean {\n    return this._matches.length > 0;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { TypeaheadConfig } from './typeahead.config';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TypeaheadContainerComponent, TypeaheadDirective],\n  exports: [TypeaheadContainerComponent, TypeaheadDirective],\n  entryComponents: [TypeaheadContainerComponent]\n})\nexport class TypeaheadModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TypeaheadModule,\n      providers: [ComponentLoaderFactory, PositioningService, TypeaheadConfig]\n    };\n  }\n}\n"]}