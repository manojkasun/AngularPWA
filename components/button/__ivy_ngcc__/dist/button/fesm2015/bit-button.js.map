{"version":3,"file":"bit-button.js","sources":["@bit/primefaces.primeng.button/button/button.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Directive,Component,ElementRef,EventEmitter,AfterViewInit,Output,OnDestroy,HostBinding,HostListener,Input} from '@angular/core';\nimport {DomHandler} from '../dom/domhandler';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pButton]'\n})\nexport class ButtonDirective implements AfterViewInit, OnDestroy {\n\n    @Input() iconPos: 'left' | 'right' = 'left';\n    \n    @Input() cornerStyleClass: string = 'ui-corner-all';\n        \n    public _label: string;\n    \n    public _icon: string;\n            \n    public initialized: boolean;\n\n    constructor(public el: ElementRef) {}\n    \n    ngAfterViewInit() {\n        DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\n        if(this.icon) {\n            let iconElement = document.createElement(\"span\");\n            iconElement.setAttribute(\"aria-hidden\", \"true\");\n            let iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right': 'ui-button-icon-left';\n            iconElement.className = iconPosClass  + ' ui-clickable ' + this.icon;\n            this.el.nativeElement.appendChild(iconElement);\n        }\n        \n        let labelElement = document.createElement(\"span\");\n        labelElement.className = 'ui-button-text ui-clickable';\n        labelElement.appendChild(document.createTextNode(this.label||'ui-btn'));\n        this.el.nativeElement.appendChild(labelElement);\n        this.initialized = true;\n    }\n        \n    getStyleClass(): string {\n        let styleClass = 'ui-button ui-widget ui-state-default ' + this.cornerStyleClass;\n        if(this.icon) {\n            if(this.label != null && this.label != undefined) {\n                if(this.iconPos == 'left')\n                    styleClass = styleClass + ' ui-button-text-icon-left';\n                else\n                    styleClass = styleClass + ' ui-button-text-icon-right';\n            }\n            else {\n                styleClass = styleClass + ' ui-button-icon-only';\n            }\n        }\n        else {\n            if(this.label) {\n                styleClass = styleClass + ' ui-button-text-only';\n            }\n            else {\n                styleClass = styleClass + ' ui-button-text-empty';\n            }\n        }\n        \n        return styleClass;\n    }\n    \n    @Input() get label(): string {\n        return this._label;\n    }\n\n    set label(val: string) {\n        this._label = val;\n        \n        if(this.initialized) {\n            DomHandler.findSingle(this.el.nativeElement, '.ui-button-text').textContent = this._label;\n\n            if(!this.icon) {\n                if (this._label) {\n                    DomHandler.removeClass(this.el.nativeElement, 'ui-button-text-empty');\n                    DomHandler.addClass(this.el.nativeElement, 'ui-button-text-only');\n                }\n                else {\n                    DomHandler.addClass(this.el.nativeElement, 'ui-button-text-empty');\n                    DomHandler.removeClass(this.el.nativeElement, 'ui-button-text-only');\n                }\n            }\n        }\n    }\n    \n    @Input() get icon(): string {\n        return this._icon;\n    }\n\n    set icon(val: string) {\n        this._icon = val;\n        \n        if(this.initialized) {\n            let iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right': 'ui-button-icon-left';\n            DomHandler.findSingle(this.el.nativeElement, '.ui-clickable').className =\n                iconPosClass + ' ui-clickable ' + this.icon;\n        }\n    }\n        \n    ngOnDestroy() {\n        while(this.el.nativeElement.hasChildNodes()) {\n            this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);\n        }\n        \n        this.initialized = false;\n    }\n}\n\n@Component({\n    selector: 'p-button',\n    template: `\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [style]=\"style\" [disabled]=\"disabled\"\n            [ngClass]=\"{'ui-button ui-widget ui-state-default ui-corner-all':true,\n                        'ui-button-icon-only': (icon && !label),\n                        'ui-button-text-icon-left': (icon && label && iconPos === 'left'),\n                        'ui-button-text-icon-right': (icon && label && iconPos === 'right'),\n                        'ui-button-text-only': (!icon && label),\n                        'ui-button-text-empty': (!icon && !label),\n                        'ui-state-disabled': disabled}\"\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\">\n            <ng-content></ng-content>\n            <span [ngClass]=\"{'ui-clickable': true,\n                        'ui-button-icon-left': (iconPos === 'left'), \n                        'ui-button-icon-right': (iconPos === 'right')}\"\n                        [class]=\"icon\" *ngIf=\"icon\"></span>\n            <span class=\"ui-button-text ui-clickable\">{{label||'ui-btn'}}</span>\n        </button>\n    `\n})\nexport class Button {\n\n    @Input() type: string;\n\n    @Input() iconPos: string = 'left';\n\n    @Input() icon: string;\n\n    @Input() label: string;\n\n    @Input() disabled: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ButtonDirective,Button],\n    declarations: [ButtonDirective,Button]\n})\nexport class ButtonModule { }\n"]}